## 初始化配置至配置服务及初始化本服务数据库
preJob:
  # job 超时时间
  timeout: 1200
  # 工具 jar 包镜像库地址
  image: registry.cn-shanghai.aliyuncs.com/c7n/dbtool:0.8.0
  preInitDB:
    # 是否初始化本服务数据库
    enabled: true
    datasource:
      # 本服务数据库相关信息，端口号结尾，不要加/或者数据库名
      url: jdbc:mysql://localhost:3306?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
      username: username
      password: password

## 实例运行数量
replicaCount: 1

## 设置默认的 image、imageTag 和 imagePullPolicy。
image:
  repository: registry.cn-shanghai.aliyuncs.com/c7n/choerodon-monitor
  tag: ~
  pullPolicy: IfNotPresent

## Deployment 更新策略
deploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

## Pod 优先级设置
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Pod 节点分配
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
tolerations: []
affinity: {}

## 给 Pod 附加的 annotations
podAnnotations: {}

## ## Pod 附加的 labels
podLabels: {}

## 实例运行时的环境变量
env:
  open:
    # 本实例服务端口
    SERVER_PORT: 8260
    # 本实例管理端口
    MANAGEMENT_SERVER_PORT: 8261

    # 注册服务地址
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://register-server:8000/eureka/

    # Redis 主机地址
    SPRING_REDIS_HOST: localhost
    # Redis 端口
    SPRING_REDIS_PORT: 6379
    # Redis script
    SPRING_REDIS_DATABASE: 1
    # 资源池中最大连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
    SPRING_REDIS_POOL_MAX_ACTIVE: 50
    # 资源池运行最大空闲的连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
    SPRING_REDIS_POOL_MAX_IDLE: 50
    # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
    # 默认 -1 表示永不超时，设置5秒
    SPRING_REDIS_POOL_MAX_WAIT: 5000

    # 数据库连接地址
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hzero_monitor?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
    # 数据库用户名
    SPRING_DATASOURCE_USERNAME: choerodon
    # 数据库密码
    SPRING_DATASOURCE_PASSWORD: password

    # 连接超时
    FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT: 2000
    # 读取超时
    FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT: 5000
    # 是否开启审计
    HZERO_AUDIT_OPERATION_ENABLE: true
    # 是否开启API审计
    HZERO_AUDIT_API_ENABLE: true
    # 是否开启注解审计
    HZERO_AUDIT_ANNOTATION_ENABLE: true
    # 资源匹配路径
    HZERO_RESOURCE_PATTERN: /v1/*,/hzero/*,/hmnt/v1/*,/hmnt/hzero/*
    # 日志级别
    LOG_LEVEL: info
    # 内存限制
#    JAVA_OPTS: >-
#      -Xms1024m
#      -Xmx1536m

    ## Skywalking 配置参数
    # SKYWALKING_OPTS: >-
    #   -javaagent:/agent/skywalking-agent.jar
    #   -Dskywalking.agent.application_code=asgard-service
    #   -Dskywalking.agent.sample_n_per_3_secs=-1
    #   -Dskywalking.collector.backend_service=oap.skywalking:11800

## Liveness 和 Readiness 探针相关配置
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 180
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

## 资源请求和限制相关配置
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    # cpu: 100m
    memory: 2Gi
  requests:
    # cpu: 100m
    memory: 2Gi

## 插件相关配置
plugins:
  # skywalking agent 镜像地址
  skywalkingAgentImage: registry.cn-shanghai.aliyuncs.com/c7n/skywalking-agent:6.6.0

## service 相关设置
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  # 是否启用 service 暴露本服务
  enabled: true
  # Service 名称
  name: choerodon-monitor
  # Service 类型
  type: ClusterIP
  # 指定 service 的 clusterIP
  clusterIP: ~
  # 端口设置
  ports:
    # 服务端口
    http:
      port: 8260
      nodePort: 30118
    # 管理端口
    actuator:
      port: 8261
      nodePort: 30119
  ## externalIPs 设置
  # externalIPs:
  #   - externalIp1
  annotations: {}
    # prometheus.io/scrape: 'true'
    # prometheus.io/path: '/actuator/prometheus'
  # prometheus.io/port: '8261'

## 指标收集
metrics:
  # 收集应用的指标数据路径
  path: /actuator/prometheus
  # 性能指标应用分组
  group: spring-boot

# 是否收集日志至EFK
logs:
  enabled: false
  # 日志收集格式
  parser: spring-boot